# Generated by Django 3.2.13 on 2022-05-29 00:18

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AboutUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=150)),
                ('subtitle', models.CharField(blank=True, max_length=150)),
                ('body', models.CharField(blank=True, max_length=1500)),
                ('avatar', models.ImageField(upload_to='avatars')),
            ],
            options={
                'verbose_name': 'About Us',
                'verbose_name_plural': 'About Us',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address1', models.CharField(blank=True, max_length=250, null=True)),
                ('address2', models.CharField(blank=True, max_length=250, null=True)),
                ('city', models.CharField(blank=True, max_length=250, null=True)),
                ('country', models.CharField(blank=True, max_length=200, null=True)),
                ('postal_zip', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Address',
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250, null=True)),
                ('time_contacted', models.DateTimeField(auto_now_add=True)),
                ('subject', models.CharField(blank=True, max_length=450, null=True)),
                ('phone', models.CharField(blank=True, max_length=250, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('message', models.CharField(blank=True, max_length=450, null=True)),
            ],
            options={
                'verbose_name': 'User Contact',
                'verbose_name_plural': 'User Contacts',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='StateProvince',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('abbreviation', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'verbose_name': 'State or Province',
                'verbose_name_plural': 'States or Provinces',
            },
        ),
        migrations.CreateModel(
            name='UserActivation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activation_key', models.CharField(blank=True, max_length=250, null=True)),
                ('date_used', models.DateTimeField(auto_now_add=True)),
                ('user_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'User Activation',
                'verbose_name_plural': 'User Activations',
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=200, null=True)),
                ('remote_ip', models.CharField(blank=True, max_length=20, null=True)),
                ('session_key', models.CharField(blank=True, max_length=200, null=True)),
                ('time_in', models.DateTimeField(auto_now_add=True)),
                ('time_out', models.DateTimeField(blank=True, null=True, verbose_name='Time Logged Out')),
                ('time_online_hours', models.IntegerField(blank=True, default=0, null=True)),
                ('time_online_minutes', models.IntegerField(blank=True, default=0, null=True)),
                ('time_online_seconds', models.IntegerField(blank=True, default=0, null=True)),
                ('time_online_total', models.CharField(blank=True, max_length=200, null=True)),
                ('time_online_delta', models.FloatField(blank=True, default=0, null=True)),
                ('date_visited', models.DateField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=140)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('first_name', models.CharField(blank=True, max_length=140)),
                ('last_name', models.CharField(blank=True, max_length=140)),
                ('body', models.CharField(blank=True, max_length=1500, null=True)),
                ('date_published', models.DateTimeField(auto_now_add=True)),
                ('link', models.CharField(blank=True, max_length=1500, null=True)),
                ('link_title', models.CharField(blank=True, max_length=140)),
                ('avatar', models.ImageField(upload_to='avatars')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Testimonial',
                'verbose_name_plural': 'Testimonials',
            },
        ),
        migrations.CreateModel(
            name='TeamMember',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=140)),
                ('is_partner', models.NullBooleanField(default=False)),
                ('is_associate', models.NullBooleanField(default=False)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('first_name', models.CharField(blank=True, max_length=140)),
                ('last_name', models.CharField(blank=True, max_length=140)),
                ('title', models.CharField(blank=True, max_length=140)),
                ('bio', models.CharField(blank=True, max_length=1500)),
                ('avatar', models.ImageField(upload_to='avatars')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Members',
                'verbose_name_plural': 'Team Members',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=250, null=True)),
                ('last_name', models.CharField(blank=True, max_length=250, null=True)),
                ('email', models.CharField(blank=True, max_length=250, null=True)),
                ('username', models.CharField(blank=True, max_length=250, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('profile_image_path', models.CharField(blank=True, default='/media/avatars/default.png', max_length=250, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('twitter_uid', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('is_new', models.NullBooleanField(default=True)),
                ('activation_sent', models.NullBooleanField(default=False)),
                ('is_activated', models.NullBooleanField(default=False)),
                ('is_avatar_processed', models.BooleanField(blank=True, default=False)),
                ('is_avatar_transfered', models.BooleanField(blank=True, default=False)),
                ('is_signature_customized', models.BooleanField(blank=True, default=False)),
                ('is_notification_sent', models.NullBooleanField(default=False)),
                ('is_online', models.BooleanField(blank=True, default=False)),
                ('is_confirmed', models.NullBooleanField(default=False)),
                ('is_cleared', models.BooleanField(blank=True, default=False)),
                ('is_facebook_signup_used', models.BooleanField(blank=True, default=False)),
                ('is_google_signup_used', models.BooleanField(blank=True, default=False)),
                ('is_twitter_signup_used', models.BooleanField(blank=True, default=False)),
                ('is_linkedin_signup_used', models.BooleanField(blank=True, default=False)),
                ('is_username_customized', models.BooleanField(blank=True, default=False)),
                ('is_user_avatar', models.BooleanField(blank=True, default=False)),
                ('is_google_avatar', models.BooleanField(blank=True, default=False)),
                ('is_facebook_avatar', models.BooleanField(blank=True, default=False)),
                ('is_twitter_avatar', models.BooleanField(blank=True, default=False)),
                ('activation_key', models.CharField(blank=True, default='', max_length=250, null=True)),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.address')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.AddField(
            model_name='address',
            name='state_province',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.stateprovince'),
        ),
    ]
